'From Squeak4.5 of 19 February 2014 [latest update: #13680] on 19 March 2015 at 5:02:38 am'!RectangleMorph subclass: #NextButton	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Mastermind'!!NextButton methodsFor: 'event handling' stamp: 'JJG 3/19/2015 03:46'!handlesMouseDown: evt 	^true.! !!NextButton methodsFor: 'event handling' stamp: 'JJG 3/19/2015 05:00'!mouseUp: evt	"get the number total and partially correct and change the GUI appropriately"	| numTotalCorrect numPartCorrect guessArray board currentRow peg |	"get the player guess from the board"	board := owner getBored.	currentRow := board row.			"check to see if the number of rows is over the max"	currentRow > (board getRows) ifTrue: [		"do big reveal"		board theBigReveal.		^0.	].	guessArray := Array new: 4.	"at put"	1 to: 4 do: [ :i|		peg := (board getPlayer: currentRow peg: i).		Transcript show: peg.		"if a peg is transparent then dont do anything yet"		peg = 7 ifTrue: [			^0.		].		guessArray at: i put: peg.	].	"guessArray := #(1 2 3 4)."	numTotalCorrect := FullCorrectChecker checkFullCorrect: guessArray.	numPartCorrect := PartialCorrectChecker checkPartialCorrect: guessArray.	"if num Total Correct is 4 then the game is over"	numTotalCorrect = 4 ifTrue:[		"big reveal the solution and restart"		board theBigReveal.	].	"set the board small pegs accordingly"	1 to: numTotalCorrect do: [	:i|		Transcript show: currentRow.		board setAnswer: currentRow peg: i mode: 1.	].	1 to: numPartCorrect do: [ :j|		board setAnswer: currentRow peg: (j+numTotalCorrect) mode: 2.	].	"increment the board row number"	board row: (currentRow+1).	board changed.	! !!NextButton methodsFor: 'as yet unclassified' stamp: 'AMM 3/19/2015 01:07'!handesMouseDown: evt	^true.! !!NextButton methodsFor: 'as yet unclassified' stamp: 'JJG 3/19/2015 03:44'!mouseUp	"get the number total and partially correct and change the GUI appropriately"	| numTotalCorrect numPartCorrect guessArray board currentRow |	"temporarily filling the checkers here take this out later*****"	FullCorrectChecker setAnswer: #(1 2 3 4) size: 4.	PartialCorrectChecker setAnswer: #(1 2 3 4) size: 4.	"get the player guess from the board"	board := owner getBored.	currentRow := board row.	guessArray := #(1 2 3 4).	numTotalCorrect := FullCorrectChecker checkFullCorrect: guessArray.	numPartCorrect := PartialCorrectChecker checkPartialCorrect: guessArray.		"if num Total Correct is 4 then the game is over"	numTotalCorrect = 4 ifTrue:[		"reveal the solution and restart"	].	"set the board small pegs accordingly"	1 to: numTotalCorrect do: [	:i|		board setAnswer: currentRow peg: i mode: 1.	].	1 to: numPartCorrect do: [ :j|		board setAnswer: currentRow peg: (j+numTotalCorrect) mode: 2.	].	"increment the board row number"	board row: (currentRow+1).	! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!NextButton class	instanceVariableNames: ''!!NextButton class methodsFor: 'as yet unclassified' stamp: 'JJG 3/19/2015 05:01'!new	| instance text|	instance := super new.	instance borderWidth: 2.	instance color: Color lightBrown.	instance extent: 50@150.		text := TextMorph new.	text contents: 'Next'.	text position:11@60.	text lock.	instance addMorph: text.	^instance! !